<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holyrobot.con_volunteer.mapper.TravelerRewardRecordingMapper" >
  <resultMap id="BaseResultMap" type="com.holyrobot.con_volunteer.pojo.TravelerRewardRecording" >
    <id column="ID" property="id" jdbcType="CHAR" />
    <result column="ParentID" property="parentid" jdbcType="CHAR" />
    <result column="ChildID" property="childid" jdbcType="CHAR" />
    <result column="OrderID" property="orderid" jdbcType="CHAR" />
    <result column="OrderNo" property="orderno" jdbcType="VARCHAR" />
    <result column="Allowance" property="allowance" jdbcType="DECIMAL" />
    <result column="DataStatus" property="datastatus" jdbcType="INTEGER" />
    <result column="CreatedDate" property="createddate" jdbcType="TIMESTAMP" />
    <result column="OrgID" property="orgid" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ParentID, ChildID, OrderID, OrderNo, Allowance, DataStatus, CreatedDate, OrgID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecordingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Traveler_Reward_Recording
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from Traveler_Reward_Recording
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from Traveler_Reward_Recording
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecordingExample" >
    delete from Traveler_Reward_Recording
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecording" >
    insert into Traveler_Reward_Recording (ID, ParentID, ChildID, 
      OrderID, OrderNo, Allowance, 
      DataStatus, CreatedDate, OrgID
      )
    values (#{id,jdbcType=CHAR}, #{parentid,jdbcType=CHAR}, #{childid,jdbcType=CHAR}, 
      #{orderid,jdbcType=CHAR}, #{orderno,jdbcType=VARCHAR}, #{allowance,jdbcType=DECIMAL},
      #{datastatus,jdbcType=INTEGER}, #{createddate,jdbcType=TIMESTAMP}, #{orgid,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecording" >
    insert into Traveler_Reward_Recording
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="parentid != null" >
        ParentID,
      </if>
      <if test="childid != null" >
        ChildID,
      </if>
      <if test="orderid != null" >
        OrderID,
      </if>
      <if test="orderno != null" >
        OrderNo,
      </if>
      <if test="allowance != null" >
        Allowance,
      </if>
      <if test="datastatus != null" >
        DataStatus,
      </if>
      <if test="createddate != null" >
        CreatedDate,
      </if>
      <if test="orgid != null" >
        OrgID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=CHAR},
      </if>
      <if test="childid != null" >
        #{childid,jdbcType=CHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=CHAR},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null" >
        #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="datastatus != null" >
        #{datastatus,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecordingExample" resultType="java.lang.Integer" >
    select count(*) from Traveler_Reward_Recording
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map" >
    update Traveler_Reward_Recording
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.parentid != null" >
        ParentID = #{record.parentid,jdbcType=CHAR},
      </if>
      <if test="record.childid != null" >
        ChildID = #{record.childid,jdbcType=CHAR},
      </if>
      <if test="record.orderid != null" >
        OrderID = #{record.orderid,jdbcType=CHAR},
      </if>
      <if test="record.orderno != null" >
        OrderNo = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.allowance != null" >
        Allowance = #{record.allowance,jdbcType=DECIMAL},
      </if>
      <if test="record.datastatus != null" >
        DataStatus = #{record.datastatus,jdbcType=INTEGER},
      </if>
      <if test="record.createddate != null" >
        CreatedDate = #{record.createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orgid != null" >
        OrgID = #{record.orgid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Traveler_Reward_Recording
    set ID = #{record.id,jdbcType=CHAR},
      ParentID = #{record.parentid,jdbcType=CHAR},
      ChildID = #{record.childid,jdbcType=CHAR},
      OrderID = #{record.orderid,jdbcType=CHAR},
      OrderNo = #{record.orderno,jdbcType=VARCHAR},
      Allowance = #{record.allowance,jdbcType=DECIMAL},
      DataStatus = #{record.datastatus,jdbcType=INTEGER},
      CreatedDate = #{record.createddate,jdbcType=TIMESTAMP},
      OrgID = #{record.orgid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecording" >
    update Traveler_Reward_Recording
    <set >
      <if test="parentid != null" >
        ParentID = #{parentid,jdbcType=CHAR},
      </if>
      <if test="childid != null" >
        ChildID = #{childid,jdbcType=CHAR},
      </if>
      <if test="orderid != null" >
        OrderID = #{orderid,jdbcType=CHAR},
      </if>
      <if test="orderno != null" >
        OrderNo = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null" >
        Allowance = #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="datastatus != null" >
        DataStatus = #{datastatus,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        CreatedDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="orgid != null" >
        OrgID = #{orgid,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holyrobot.con_volunteer.pojo.TravelerRewardRecording" >
    update Traveler_Reward_Recording
    set ParentID = #{parentid,jdbcType=CHAR},
      ChildID = #{childid,jdbcType=CHAR},
      OrderID = #{orderid,jdbcType=CHAR},
      OrderNo = #{orderno,jdbcType=VARCHAR},
      Allowance = #{allowance,jdbcType=DECIMAL},
      DataStatus = #{datastatus,jdbcType=INTEGER},
      CreatedDate = #{createddate,jdbcType=TIMESTAMP},
      OrgID = #{orgid,jdbcType=CHAR}
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateSatuts" parameterType="string">
    UPDATE Traveler_Reward_Recording set DataStatus = -1 where orderId = #{orderId}
  </update>
  <select id="getAllowance" resultType="java.util.HashMap">
    SELECT
    c.*,
    ISNULL((SELECT
    sum(a.Allowance)
    FROM
    Traveler_Reward_Recording a
    where c.UserID= a.ParentID and a.DataStatus =1
    ),0) AS Allowance,
    ISNULL((SELECT
    sum(a.Allowance)
    FROM
    Traveler_Reward_Recording a
    where c.UserID= a.ParentID and a.DataStatus in (1,0)
    ),0) AS AllowanceTotal,
    ISNULL((SELECT
    sum(b.ApplicationAmt)
    FROM
    Traveler_Reward_WithdrawDeposit b
    where c.UserID= b.ParentID and b.DataStatus in (1,0)
    ),0) AS ApplicationAmt,
    (
    CASE
    WHEN (
    SELECT
    TOP 1 ID
    FROM
    Volunteer_Parent d
    <where>
      <if test="map.userId!=null">
        d.ParentID = #{map.userId}
      </if>
      <if test="map.orgId!=null">
        and d.OrgID = #{map.orgId}
      </if>
    </where>
    ) IS NULL THEN
    0
    ELSE
    1
    END
    ) isTralveer
    FROM
    Volunteer_Application c
    <where>
      <if test="map.userId!=null">
        c.UserID = #{map.userId}
      </if>
      <if test="map.orgId!=null">
        and c.OrgID = #{map.orgId}
      </if>
    </where>
  </select>
  <select id="getAllowanceRecording" resultType="java.util.HashMap">
    select a.OrderNo,a.orderid,CONVERT(varchar(100), a.CreatedDate, 23) CreatedDate,a.Allowance,b.DataStatus,a.DataStatus as AllowanceDataStatus,CONVERT(varchar(100), b.ReturnDate, 23) ReturnDate
    from Traveler_Reward_Recording a LEFT JOIN Ord_OrderInfo b on a.OrderID=b.ID
    <where>
       <if test="map.userId!=null">
         a.ParentID=#{map.userId}
       </if>
      <if test="map.orgId!=null">
       and a.OrgId=#{map.orgId}
      </if>
    </where>
  </select>
  <select id="getAllowanceWithReward" resultType="java.util.HashMap">
   SELECT
	temp.ApplicationAmt,
    CONVERT(varchar(100), temp.CreatedDate, 23) CreatedDate,
    CONVERT(varchar(100), temp.RevisedDate, 23) RevisedDate,
	temp.DataStatus
  FROM
      Traveler_Reward_WithdrawDeposit temp
  <where>
    <if test="map.userId!=null">
      temp.ParentID =#{map.userId}
    </if>
    <if test="map.orgId!=null">
      and temp.OrgId =#{map.orgId}
    </if>
  </where>
  ORDER BY
	temp.CreatedDate DESC
  </select>
</mapper>