<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holyrobot.con_res.mapper.ResFlightProductMapper" >
  <resultMap id="BaseResultMap" type="com.holyrobot.con_res.pojo.ResFlightProduct" >
    <id column="ID" property="id" jdbcType="CHAR" />
    <result column="FlightDate" property="flightdate" jdbcType="TIMESTAMP" />
    <result column="IntervalDays" property="intervaldays" jdbcType="INTEGER" />
    <result column="TicketNumber" property="ticketnumber" jdbcType="INTEGER" />
    <result column="TicketAmount" property="ticketamount" jdbcType="DECIMAL" />
    <result column="TaxAmount" property="taxamount" jdbcType="DECIMAL" />
    <result column="OilAmount" property="oilamount" jdbcType="DECIMAL" />
    <result column="Flight_Type" property="flightType" jdbcType="INTEGER" />
    <result column="Source" property="source" jdbcType="VARCHAR" />
    <result column="ToFlightNo" property="toflightno" jdbcType="VARCHAR" />
    <result column="FromFlightNo" property="fromflightno" jdbcType="VARCHAR" />
    <result column="DataStatus" property="datastatus" jdbcType="INTEGER" />
    <result column="CreatedDate" property="createddate" jdbcType="TIMESTAMP" />
    <result column="CreatedBy" property="createdby" jdbcType="VARCHAR" />
    <result column="CreatedByID" property="createdbyid" jdbcType="CHAR" />
    <result column="DeptID" property="deptid" jdbcType="CHAR" />
    <result column="OrgID" property="orgid" jdbcType="CHAR" />
    <result column="RevisedDate" property="reviseddate" jdbcType="TIMESTAMP" />
    <result column="RevisedBy" property="revisedby" jdbcType="VARCHAR" />
    <result column="SupplierID" property="supplierid" jdbcType="CHAR" />
    <result column="Supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="isShare" property="isshare" jdbcType="INTEGER" />
    <result column="SharePrices" property="shareprices" jdbcType="DECIMAL" />
    <result column="Comment" property="comment" jdbcType="VARCHAR" />
    <result column="DesStation" property="desstation" jdbcType="VARCHAR" />
    <result column="DepStation" property="depstation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, FlightDate, IntervalDays, TicketNumber, TicketAmount, TaxAmount, OilAmount, Flight_Type, 
    Source, ToFlightNo, FromFlightNo, DataStatus, CreatedDate, CreatedBy, CreatedByID, 
    DeptID, OrgID, RevisedDate, RevisedBy, SupplierID, Supplier, isShare, SharePrices, 
    Comment, DesStation, DepStation
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.holyrobot.con_res.pojo.ResFlightProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Res_FlightProduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from Res_FlightProduct
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from Res_FlightProduct
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.holyrobot.con_res.pojo.ResFlightProductExample" >
    delete from Res_FlightProduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holyrobot.con_res.pojo.ResFlightProduct" >
    insert into Res_FlightProduct (ID, FlightDate, IntervalDays, 
      TicketNumber, TicketAmount, TaxAmount, 
      OilAmount, Flight_Type, Source, 
      ToFlightNo, FromFlightNo, DataStatus, 
      CreatedDate, CreatedBy, CreatedByID, 
      DeptID, OrgID, RevisedDate, 
      RevisedBy, SupplierID, Supplier, 
      isShare, SharePrices, Comment, 
      DesStation, DepStation)
    values (#{id,jdbcType=CHAR}, #{flightdate,jdbcType=TIMESTAMP}, #{intervaldays,jdbcType=INTEGER}, 
      #{ticketnumber,jdbcType=INTEGER}, #{ticketamount,jdbcType=DECIMAL}, #{taxamount,jdbcType=DECIMAL}, 
      #{oilamount,jdbcType=DECIMAL}, #{flightType,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR},
      #{toflightno,jdbcType=VARCHAR}, #{fromflightno,jdbcType=VARCHAR}, #{datastatus,jdbcType=INTEGER},
      #{createddate,jdbcType=TIMESTAMP}, #{createdby,jdbcType=VARCHAR}, #{createdbyid,jdbcType=CHAR},
      #{deptid,jdbcType=CHAR}, #{orgid,jdbcType=CHAR}, #{reviseddate,jdbcType=TIMESTAMP}, 
      #{revisedby,jdbcType=VARCHAR}, #{supplierid,jdbcType=CHAR}, #{supplier,jdbcType=VARCHAR},
      #{isshare,jdbcType=INTEGER}, #{shareprices,jdbcType=DECIMAL}, #{comment,jdbcType=VARCHAR},
      #{desstation,jdbcType=VARCHAR}, #{depstation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.holyrobot.con_res.pojo.ResFlightProduct" >
    insert into Res_FlightProduct
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="flightdate != null" >
        FlightDate,
      </if>
      <if test="intervaldays != null" >
        IntervalDays,
      </if>
      <if test="ticketnumber != null" >
        TicketNumber,
      </if>
      <if test="ticketamount != null" >
        TicketAmount,
      </if>
      <if test="taxamount != null" >
        TaxAmount,
      </if>
      <if test="oilamount != null" >
        OilAmount,
      </if>
      <if test="flightType != null" >
        Flight_Type,
      </if>
      <if test="source != null" >
        Source,
      </if>
      <if test="toflightno != null" >
        ToFlightNo,
      </if>
      <if test="fromflightno != null" >
        FromFlightNo,
      </if>
      <if test="datastatus != null" >
        DataStatus,
      </if>
      <if test="createddate != null" >
        CreatedDate,
      </if>
      <if test="createdby != null" >
        CreatedBy,
      </if>
      <if test="createdbyid != null" >
        CreatedByID,
      </if>
      <if test="deptid != null" >
        DeptID,
      </if>
      <if test="orgid != null" >
        OrgID,
      </if>
      <if test="reviseddate != null" >
        RevisedDate,
      </if>
      <if test="revisedby != null" >
        RevisedBy,
      </if>
      <if test="supplierid != null" >
        SupplierID,
      </if>
      <if test="supplier != null" >
        Supplier,
      </if>
      <if test="isshare != null" >
        isShare,
      </if>
      <if test="shareprices != null" >
        SharePrices,
      </if>
      <if test="comment != null" >
        Comment,
      </if>
      <if test="desstation != null" >
        DesStation,
      </if>
      <if test="depstation != null" >
        DepStation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="flightdate != null" >
        #{flightdate,jdbcType=TIMESTAMP},
      </if>
      <if test="intervaldays != null" >
        #{intervaldays,jdbcType=INTEGER},
      </if>
      <if test="ticketnumber != null" >
        #{ticketnumber,jdbcType=INTEGER},
      </if>
      <if test="ticketamount != null" >
        #{ticketamount,jdbcType=DECIMAL},
      </if>
      <if test="taxamount != null" >
        #{taxamount,jdbcType=DECIMAL},
      </if>
      <if test="oilamount != null" >
        #{oilamount,jdbcType=DECIMAL},
      </if>
      <if test="flightType != null" >
        #{flightType,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="toflightno != null" >
        #{toflightno,jdbcType=VARCHAR},
      </if>
      <if test="fromflightno != null" >
        #{fromflightno,jdbcType=VARCHAR},
      </if>
      <if test="datastatus != null" >
        #{datastatus,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdbyid != null" >
        #{createdbyid,jdbcType=CHAR},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=CHAR},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=CHAR},
      </if>
      <if test="reviseddate != null" >
        #{reviseddate,jdbcType=TIMESTAMP},
      </if>
      <if test="revisedby != null" >
        #{revisedby,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null" >
        #{supplierid,jdbcType=CHAR},
      </if>
      <if test="supplier != null" >
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="isshare != null" >
        #{isshare,jdbcType=INTEGER},
      </if>
      <if test="shareprices != null" >
        #{shareprices,jdbcType=DECIMAL},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="desstation != null" >
        #{desstation,jdbcType=VARCHAR},
      </if>
      <if test="depstation != null" >
        #{depstation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holyrobot.con_res.pojo.ResFlightProductExample" resultType="java.lang.Integer" >
    select count(*) from Res_FlightProduct
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Res_FlightProduct
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.flightdate != null" >
        FlightDate = #{record.flightdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intervaldays != null" >
        IntervalDays = #{record.intervaldays,jdbcType=INTEGER},
      </if>
      <if test="record.ticketnumber != null" >
        TicketNumber = #{record.ticketnumber,jdbcType=INTEGER},
      </if>
      <if test="record.ticketamount != null" >
        TicketAmount = #{record.ticketamount,jdbcType=DECIMAL},
      </if>
      <if test="record.taxamount != null" >
        TaxAmount = #{record.taxamount,jdbcType=DECIMAL},
      </if>
      <if test="record.oilamount != null" >
        OilAmount = #{record.oilamount,jdbcType=DECIMAL},
      </if>
      <if test="record.flightType != null" >
        Flight_Type = #{record.flightType,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        Source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.toflightno != null" >
        ToFlightNo = #{record.toflightno,jdbcType=VARCHAR},
      </if>
      <if test="record.fromflightno != null" >
        FromFlightNo = #{record.fromflightno,jdbcType=VARCHAR},
      </if>
      <if test="record.datastatus != null" >
        DataStatus = #{record.datastatus,jdbcType=INTEGER},
      </if>
      <if test="record.createddate != null" >
        CreatedDate = #{record.createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null" >
        CreatedBy = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.createdbyid != null" >
        CreatedByID = #{record.createdbyid,jdbcType=CHAR},
      </if>
      <if test="record.deptid != null" >
        DeptID = #{record.deptid,jdbcType=CHAR},
      </if>
      <if test="record.orgid != null" >
        OrgID = #{record.orgid,jdbcType=CHAR},
      </if>
      <if test="record.reviseddate != null" >
        RevisedDate = #{record.reviseddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.revisedby != null" >
        RevisedBy = #{record.revisedby,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierid != null" >
        SupplierID = #{record.supplierid,jdbcType=CHAR},
      </if>
      <if test="record.supplier != null" >
        Supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.isshare != null" >
        isShare = #{record.isshare,jdbcType=INTEGER},
      </if>
      <if test="record.shareprices != null" >
        SharePrices = #{record.shareprices,jdbcType=DECIMAL},
      </if>
      <if test="record.comment != null" >
        Comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.desstation != null" >
        DesStation = #{record.desstation,jdbcType=VARCHAR},
      </if>
      <if test="record.depstation != null" >
        DepStation = #{record.depstation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Res_FlightProduct
    set ID = #{record.id,jdbcType=CHAR},
      FlightDate = #{record.flightdate,jdbcType=TIMESTAMP},
      IntervalDays = #{record.intervaldays,jdbcType=INTEGER},
      TicketNumber = #{record.ticketnumber,jdbcType=INTEGER},
      TicketAmount = #{record.ticketamount,jdbcType=DECIMAL},
      TaxAmount = #{record.taxamount,jdbcType=DECIMAL},
      OilAmount = #{record.oilamount,jdbcType=DECIMAL},
      Flight_Type = #{record.flightType,jdbcType=INTEGER},
      Source = #{record.source,jdbcType=VARCHAR},
      ToFlightNo = #{record.toflightno,jdbcType=VARCHAR},
      FromFlightNo = #{record.fromflightno,jdbcType=VARCHAR},
      DataStatus = #{record.datastatus,jdbcType=INTEGER},
      CreatedDate = #{record.createddate,jdbcType=TIMESTAMP},
      CreatedBy = #{record.createdby,jdbcType=VARCHAR},
      CreatedByID = #{record.createdbyid,jdbcType=CHAR},
      DeptID = #{record.deptid,jdbcType=CHAR},
      OrgID = #{record.orgid,jdbcType=CHAR},
      RevisedDate = #{record.reviseddate,jdbcType=TIMESTAMP},
      RevisedBy = #{record.revisedby,jdbcType=VARCHAR},
      SupplierID = #{record.supplierid,jdbcType=CHAR},
      Supplier = #{record.supplier,jdbcType=VARCHAR},
      isShare = #{record.isshare,jdbcType=INTEGER},
      SharePrices = #{record.shareprices,jdbcType=DECIMAL},
      Comment = #{record.comment,jdbcType=VARCHAR},
      DesStation = #{record.desstation,jdbcType=VARCHAR},
      DepStation = #{record.depstation,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holyrobot.con_res.pojo.ResFlightProduct" >
    update Res_FlightProduct
    <set >
      <if test="flightdate != null" >
        FlightDate = #{flightdate,jdbcType=TIMESTAMP},
      </if>
      <if test="intervaldays != null" >
        IntervalDays = #{intervaldays,jdbcType=INTEGER},
      </if>
      <if test="ticketnumber != null" >
        TicketNumber = #{ticketnumber,jdbcType=INTEGER},
      </if>
      <if test="ticketamount != null" >
        TicketAmount = #{ticketamount,jdbcType=DECIMAL},
      </if>
      <if test="taxamount != null" >
        TaxAmount = #{taxamount,jdbcType=DECIMAL},
      </if>
      <if test="oilamount != null" >
        OilAmount = #{oilamount,jdbcType=DECIMAL},
      </if>
      <if test="flightType != null" >
        Flight_Type = #{flightType,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        Source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="toflightno != null" >
        ToFlightNo = #{toflightno,jdbcType=VARCHAR},
      </if>
      <if test="fromflightno != null" >
        FromFlightNo = #{fromflightno,jdbcType=VARCHAR},
      </if>
      <if test="datastatus != null" >
        DataStatus = #{datastatus,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        CreatedDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        CreatedBy = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdbyid != null" >
        CreatedByID = #{createdbyid,jdbcType=CHAR},
      </if>
      <if test="deptid != null" >
        DeptID = #{deptid,jdbcType=CHAR},
      </if>
      <if test="orgid != null" >
        OrgID = #{orgid,jdbcType=CHAR},
      </if>
      <if test="reviseddate != null" >
        RevisedDate = #{reviseddate,jdbcType=TIMESTAMP},
      </if>
      <if test="revisedby != null" >
        RevisedBy = #{revisedby,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null" >
        SupplierID = #{supplierid,jdbcType=CHAR},
      </if>
      <if test="supplier != null" >
        Supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="isshare != null" >
        isShare = #{isshare,jdbcType=INTEGER},
      </if>
      <if test="shareprices != null" >
        SharePrices = #{shareprices,jdbcType=DECIMAL},
      </if>
      <if test="comment != null" >
        Comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="desstation != null" >
        DesStation = #{desstation,jdbcType=VARCHAR},
      </if>
      <if test="depstation != null" >
        DepStation = #{depstation,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holyrobot.con_res.pojo.ResFlightProduct" >
    update Res_FlightProduct
    set FlightDate = #{flightdate,jdbcType=TIMESTAMP},
      IntervalDays = #{intervaldays,jdbcType=INTEGER},
      TicketNumber = #{ticketnumber,jdbcType=INTEGER},
      TicketAmount = #{ticketamount,jdbcType=DECIMAL},
      TaxAmount = #{taxamount,jdbcType=DECIMAL},
      OilAmount = #{oilamount,jdbcType=DECIMAL},
      Flight_Type = #{flightType,jdbcType=INTEGER},
      Source = #{source,jdbcType=VARCHAR},
      ToFlightNo = #{toflightno,jdbcType=VARCHAR},
      FromFlightNo = #{fromflightno,jdbcType=VARCHAR},
      DataStatus = #{datastatus,jdbcType=INTEGER},
      CreatedDate = #{createddate,jdbcType=TIMESTAMP},
      CreatedBy = #{createdby,jdbcType=VARCHAR},
      CreatedByID = #{createdbyid,jdbcType=CHAR},
      DeptID = #{deptid,jdbcType=CHAR},
      OrgID = #{orgid,jdbcType=CHAR},
      RevisedDate = #{reviseddate,jdbcType=TIMESTAMP},
      RevisedBy = #{revisedby,jdbcType=VARCHAR},
      SupplierID = #{supplierid,jdbcType=CHAR},
      Supplier = #{supplier,jdbcType=VARCHAR},
      isShare = #{isshare,jdbcType=INTEGER},
      SharePrices = #{shareprices,jdbcType=DECIMAL},
      Comment = #{comment,jdbcType=VARCHAR},
      DesStation = #{desstation,jdbcType=VARCHAR},
      DepStation = #{depstation,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=CHAR}
  </update>
</mapper>